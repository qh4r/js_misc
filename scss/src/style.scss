@import "res/colors";
@import "sunshine";
@import "heart";
@import "utlis";
// da sie laczyc pliki sass i scss
.container {
  width: 80%;
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;

  >div {
    width: 100%;
  }
}


div {
  h2 {
    text-align: center;
    border: {
      style: solid;
      color: $blue;
      width: 2px;
      radius: 4px
    }
  ;
  }
}

.margin-auto { //klasa do extendow
  //&-using-selector {
  //  margin: auto;
  //}
  // & NIE ZADZIALA NA KLASY DZIEDZICZACE tylko na ta klase - trzbea uwaac
  margin: auto;
  .test {
    background-color: #50b879;
    div {
      text-decoration: dashed;
    }
  } // klasy extendowane zachowaja w sobie utworzone w kalsie matce drzewo zależności
}

.bear {
  $blue: lighten($blue, 30%); // zmienne maja scope w elemencie w ktorym sa utworzone i przesłaniają sie
  $text: "test";

  padding: 1rem 2rem;
  @extend .margin-auto;

  .container-#{$text} {
    background-color: $red;
  }

  @at-root { // at root wyciaga wynik do roota
    #{&}-container::after {  // dzieki temu dostajemy .bear-container zamiast .bear .bear-container
      display: block;
      content: $text;
    }
  }
  &-container & {
    @extend .margin-auto;
    transition: transform 1s ease-in-out;
  }

  &-container {
    background-color: $blue;
    @extend .margin-auto;
  }

  // & - zawsze oznacza rodzica czyli w tym wypadku .bear -> .bear-container:hover bear
  &-container:hover & {
    transform: rotate(180deg);
  }

  &::before {
    display: block;
    content: "https://en.wikipedia.org/wiki/Care_Bears";
  }

  //@at-root to specjalna ddyrektywa ktora sprawia ze mozliwe jest dodanie rodzica(&) po tagu elementu.
  // wynik to img.bear , bez at-root img& powodowalo by blad kompilacji
  @at-root {
    img#{&}-img {
      margin: auto;

      transition: transform 1s ease-in-out;
      // img to domyslnie inline-block element wiec by byl wysrodkowany trza y dodac display bloc, ale bez tego jest ciekawiej
      //display: block;
      //margin: auto;
      &:hover {
        transform: rotate(540deg);
      }
    }
  }

  //img {
  //  transition: transform 1s ease-in-out;
  //  // img to domyslnie inline-block element wiec by byl wysrodkowany trza y dodac display bloc, ale bez tego jest ciekawiej
  //  //display: block;
  //  //margin: auto;
  //  &:hover {
  //    transform: rotate(540deg);
  //  }
  //}
}